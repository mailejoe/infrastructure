AWSTemplateFormatVersion: "2010-09-09"
Description: "VPC: public and private subnets in three availability zones"
Metadata:
  "AWS::CloudFormation::Interface":
    ParameterGroups:
      - Label:
          default: "VPC Parameters"
        Parameters:
          - ClassB
Parameters:
  ClassB:
    Description: "Class B of VPC (10.XXX.0.0/16)"
    Type: Number
    Default: 100
    ConstraintDescription: "Must be in the range [0-255]"
    MinValue: 0
    MaxValue: 255
Resources:
  VPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: !Sub "10.${ClassB}.0.0/16"
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: !Sub "10.${ClassB}.0.0/16"
  InternetGateway:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "10.${ClassB}.0.0/16"
  VPCGatewayAttachment:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  SubnetPublic:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Select [0, !GetAZs ""]
      CidrBlock: !Sub "10.${ClassB}.0.0/20"
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: "public"
        - Key: Reach
          Value: public
  SubnetPrivate:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Select [0, !GetAZs ""]
      CidrBlock: !Sub "10.${ClassB}.16.0/20"
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: "private"
        - Key: Reach
          Value: private
  RouteTablePublic:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: "Public"
  RouteTablePrivate:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: "Private"
  RouteTableAssociationPublic:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref SubnetPublic
      RouteTableId: !Ref RouteTablePublic
  RouteTableAssociationPrivate:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref SubnetPrivate
      RouteTableId: !Ref RouteTablePrivate
  RouteTablePublicInternetRoute:
    Type: "AWS::EC2::Route"
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId: !Ref RouteTablePublic
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref InternetGateway
  NetworkAclPublic:
    Type: "AWS::EC2::NetworkAcl"
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: Public
  NetworkAclPrivate:
    Type: "AWS::EC2::NetworkAcl"
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: Private
  SubnetNetworkAclAssociationAPublic:
    Type: "AWS::EC2::SubnetNetworkAclAssociation"
    Properties:
      SubnetId: !Ref SubnetPublic
      NetworkAclId: !Ref NetworkAclPublic
  SubnetNetworkAclAssociationAPrivate:
    Type: "AWS::EC2::SubnetNetworkAclAssociation"
    Properties:
      SubnetId: !Ref SubnetPrivate
      NetworkAclId: !Ref NetworkAclPrivate
  NetworkAclEntryInPublicAllowAll:
    Type: "AWS::EC2::NetworkAclEntry"
    Properties:
      NetworkAclId: !Ref NetworkAclPublic
      RuleNumber: 99
      Protocol: -1
      RuleAction: allow
      Egress: false
      CidrBlock: "0.0.0.0/0"
  NetworkAclEntryOutPublicAllowAll:
    Type: "AWS::EC2::NetworkAclEntry"
    Properties:
      NetworkAclId: !Ref NetworkAclPublic
      RuleNumber: 99
      Protocol: -1
      RuleAction: allow
      Egress: true
      CidrBlock: "0.0.0.0/0"
  NetworkAclEntryInPrivateAllowVPC:
    Type: "AWS::EC2::NetworkAclEntry"
    Properties:
      NetworkAclId: !Ref NetworkAclPrivate
      RuleNumber: 99
      Protocol: -1
      RuleAction: allow
      Egress: false
      CidrBlock: "0.0.0.0/0"
  NetworkAclEntryOutPrivateAllowVPC:
    Type: "AWS::EC2::NetworkAclEntry"
    Properties:
      NetworkAclId: !Ref NetworkAclPrivate
      RuleNumber: 99
      Protocol: -1
      RuleAction: allow
      Egress: true
      CidrBlock: "0.0.0.0/0"
Outputs:
  TemplateID:
    Description: "ID of the vpc/vpc-1az template"
    Value: "vpc/vpc-1az"
  StackName:
    Description: "Stack Name"
    Value: !Sub "${AWS::StackName}"
  AZ:
    Description: "Single AZ"
    Value: !Select [0, !GetAZs ""]
    Export:
      Name: !Sub "${AWS::StackName}-AZ"
  ClassB:
    Description: "Class B"
    Value: !Ref ClassB
    Export:
      Name: !Sub "${AWS::StackName}-ClassB"
  VPC:
    Description: "VPC"
    Value: !Ref VPC
    Export:
      Name: !Sub "${AWS::StackName}-VPC"
  SubnetPublic:
    Description: "Subnet Public"
    Value: !Ref SubnetPublic
    Export:
      Name: !Sub "${AWS::StackName}-SubnetPublic"
  RouteTablePublic:
    Description: "Route Table Public"
    Value: !Ref RouteTablePublic
    Export:
      Name: !Sub "${AWS::StackName}-RouteTablePublic"
  SubnetPrivate:
    Description: "Subnet Private"
    Value: !Ref SubnetPrivate
    Export:
      Name: !Sub "${AWS::StackName}-SubnetPrivate"
  RouteTablePrivate:
    Description: "Route Table Private"
    Value: !Ref RouteTablePrivate
    Export:
      Name: !Sub "${AWS::StackName}-RouteTablePrivate"

version: 2.1

orbs:
  aws-s3: circleci/aws-s3@1.0.15

workflows:
  version: 2
  build-deploy:
    jobs:
      - lint:
          filters:
            branches:
              ignore: /noop-.*/
      - validate:
          filters:
            branches:
              ignore: /noop-.*/
      - deploy:
          requires:
            - lint
            - validate
          filters:
            branches:
              only: master

jobs:
  lint:
    docker:
      - image: python:3.9

    working_directory: ~/mailejoe

    steps:
      - checkout
      - run:
          name: install dependencies
          no_output_timeout: 30m
          command: |
            pip install cfn-lint
            cfn-lint ./**/*.yml

  validate:
    docker:
      - image: amazon/aws-cli
        environment:
          AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
          AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
          AWS_DEFAULT_REGION: us-east-1

    working_directory: ~/mailejoe

    steps:
      - checkout
      - run:
          name: validate
          no_output_timeout: 30m
          command: aws cloudformation validate-template --template-body file://mailejoe.yml

  deploy:
    docker:
      - image: ubuntu
        environment:
          AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
          AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
          AWS_DEFAULT_REGION: us-east-1

    working_directory: ~/mailejoe

    steps:
      - checkout
      - run:
          name: install dependencies
          no_output_timeout: 30m
          command: |
            apt update
            DEBIAN_FRONTEND=noninteractive apt install -y --no-install-recommends tzdata
            apt install -y software-properties-common
            apt install -y awscli
            apt install -y curl zip jq
            curl -fsSL https://deb.nodesource.com/setup_14.x | bash -
            apt install -y nodejs
      - run:
          name: deploy buckets
          no_output_timeout: 30m
          command: |
            aws cloudformation deploy --template-file buckets.yml --stack-name mailejoe-buckets --no-fail-on-empty-changeset --tags application=mailejoe
      - run:
          name: discord code
          no_output_timeout: 30m
          command: |
            echo "build discord code"
            cd lambda
            npm install --production
            zip discord.zip discord.js package.json ./node_modules
            echo "upload discord code"
            CODE_BUCKET=$(aws cloudformation describe-stacks --stack-name mailejoe-buckets | jq -r '.Stacks[0].Outputs[] | select(.OutputKey=="CodeAssetsBucketName") | .OutputValue')
            VERSION=$(cat package.json | jq -r '.version')
            aws s3 cp discord.zip s3://$CODE_BUCKET/dev-ops/discord-$VERSION.zip
      - run:
          name: deploy mailejoe infrastructure
          no_output_timeout: 30m
          command: |
            aws cloudformation deploy --template-file alerts.yml --stack-name mailejoe-alerts --parameter-overrides Email=$MAILEJOE_SUPPORT_EMAIL --capabilities CAPABILITY_IAM --no-fail-on-empty-changeset --tags application=mailejoe
